{
  "info": {
    "title": "my friendly api",
    "version": "v1.0",
    "description": "Describing the purpose of the API"
  },
  "tags": [
    {
      "name": "query",
      "description": null
    }
  ],
  "paths": {
    "/greet/{name}/{age}": {
      "get": {
        "summary": "Send greetings",
        "description": "Greets the stupid human by offering them a beverage suitable for their age",
        "tags": [
          "query"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "drink",
            "required": false,
            "description": "your favourite beverage"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "name",
            "required": true,
            "description": null
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "path",
            "name": "age",
            "required": true,
            "description": null
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "getGreet_name__age"
      }
    },
    "/search/{name}": {
      "get": {
        "summary": "Search family tree",
        "description": "Given a name, returns a sub family tree starting with that person",
        "tags": [
          "query"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "name",
            "required": true,
            "description": null
          }
        ],
        "responses": {
          "200": {
            "description": "Cut down family tree",
            "content": {
              "application/json": {
                "example": {
                  "name": "Bob",
                  "age": {
                    "value": 85
                  },
                  "children": [
                    {
                      "name": "Anita",
                      "age": {
                        "value": 55
                      },
                      "children": []
                    },
                    {
                      "name": "Donald",
                      "age": {
                        "value": 52
                      },
                      "children": [
                        {
                          "name": "Don Jr",
                          "age": {
                            "value": 21
                          },
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/Person",
                  "example": null
                }
              }
            }
          },
          "404": {
            "description": "That person does not exist the family",
            "content": {}
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "operationId": "getSearch_name"
      }
    }
  },
  "components": {
    "schemas": {
      "Person": {
        "properties": {
          "name": {
            "example": "Don Jr",
            "type": "string"
          },
          "age": {
            "$ref": "#/components/schemas/Age",
            "example": null
          },
          "children": {
            "items": {
              "oneOf": []
            },
            "example": [],
            "type": "array"
          }
        },
        "example": {
          "name": "Don Jr",
          "age": {
            "value": 21
          },
          "children": []
        },
        "type": "object",
        "required": [
          "age",
          "children",
          "name"
        ]
      },
      "Age": {
        "properties": {
          "value": {
            "example": 21,
            "type": "number"
          }
        },
        "example": {
          "value": 21
        },
        "type": "object",
        "required": [
          "value"
        ]
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "openapi": "3.0.0"
}
